# -*- coding: utf-8 -*-
"""NN on irisdatapynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rq1eOUfMtOwYpPQU9I1HN5cp3G8L5FQy
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris

df_iris=load_iris()
print(df_iris.DESCR)

df_iris.data

df_iris.keys()

df_iris.feature_names

df_iris.target

df=pd.DataFrame(df_iris.data,columns=df_iris.feature_names)
df.head()

target = pd.DataFrame(df_iris.target)
target = target.rename(columns = {0: 'target'})
print(target.head())
print('all target column have 3 value: ',target.target.unique())

df = pd.concat([df, target], axis = 1)
df.head()

df.describe()

df.info()

df.shape

df.isnull().sum()

plt.figure(figsize=(10,5))
sns.heatmap(df.corr(),annot=True)
plt.show()

sns.FacetGrid(df,hue='target',height=5).map(plt.scatter,'sepal length (cm)','sepal width (cm)').add_legend()

sns.pairplot(df,hue="target")
plt.show()

sns.scatterplot(x='sepal length (cm)',y='petal length (cm)',hue='target',data=df)
plt.title('sepal length vs petal length')
plt.show()

from sklearn.model_selection import train_test_split
from keras.models import Sequential
from keras.layers import Dense,Dropout
from keras.optimizers import Adam
from sklearn.metrics import accuracy_score
from keras import activations
from keras.utils import to_categorical
import tensorflow as tf

df['target']

X=df.drop('target',axis=1)
Y=df['target']
Y = pd.get_dummies(Y).values
print(Y[0:5])

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=42)
print(X_train.shape)
print(X_test.shape)
print(Y_train.shape)
print(Y_test.shape)

model=Sequential()
model.add(Dense(10,activation='relu',))
model.add(Dense(32,activation='relu'))
model.add(Dense(16,activation='relu'))
model.add(Dense(3,activation='softmax'))

model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

with tf.compat.v1.Session() as sess:
    sess.run(tf.compat.v1.global_variables_initializer())

model.fit(X_train,Y_train,epochs=100,batch_size=50)

loss,accuracy=model.evaluate(X_test,Y_test)
print('loss: ',loss)
print('accuracy: ',accuracy)